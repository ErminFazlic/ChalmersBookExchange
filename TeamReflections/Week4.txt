THE CURRENT SITUATION (A):
We have completed the 4 of the user stories which are of the highest priority. '
We now have the possibilty to create posts and seach of them as well. 
There are some codes to be reviwed but in general the website has the basic functionality. 


B:

At the end of the next sprint we want to be finished with the functionality whioch enables a user 
to be shown the recent postnings and favorites on the landing page after logging in. We would also
want to be finished with the chatting function so users can communicate with each other.


A->B:

To reach this goal we will try to finish our user stories under the to-do list on the trello
board. This includes the user stories: 
1. As a student I want to be shown recent postings and my favorites on the landing page after logging 
in so I can easily browse posts
2. As a student I want to contact other students for planning the purchase to be able to more easily buy the book


Customer Value and scope:
To succeed in this goal we will focus on teamwork and split up the tasks on the user stories
explicitly. To do this in a good way, we've split all user stories in to tasks and made effort
estimations for them through planning poker. This helped us decide how many team members are
needed for each user story.

Before mergeing any code we have decided that the code will be reviewed and tested by someone
other than the team members working on that user story.

The KPI we will use to monitor the team members individual progress will be hours worked.
We will also use a KPI to monitor the team's progress. This is gonna be number of user stories
done per sprint.


Social contract and effort:
We aim for the individual KPI of two hours worked per sprint per individual. We aim for the team 
KPI of two user stories done per
sprint.

This week we didn't finish any user stories since the goal of the week was to create them.
For the individual KPI, we all spent more time than the 2 hours since we all needed some time
to figure out the software and framework used as well as getting a feeling for it.


Design decisions and product structure:
We've chosen to do this project in C# with the framework ASP.NET Core. We chose this as we 
felt it's a good framework to easily start working with where a lot of the tedious ground-work
is done. This allows us to earlier start working on the functionality for the end-users and
thus providing more value for the time spent.

We've also decided on a SQL database, this is because a lot of the data is relational, for 
example a user has favorite posts. 

Furthermore, we've decided on the MVC design pattern to effectively separate concerns in the
application. This will help us work in a module way. In addition to this we've created use
cases and interaction diagrams to further streamline the work experience.



Application of Scrum:
The following roles we've used are: Scrum master, Product owner, a meeting organizer.
These roles allowed us to have someone take charge in the meetings and sprint reviews and
making sure that we move forward in those (Scrum master). The product owner role allows us
to deliver something of value each sprint. We have no external PO so we have on of the team
members act as one. The sprint review with the PO resulted in a re-prioritasion of the user
stories as well as some additional ones.

For our IDE we used Jetbrains Rider for all group members, Github for version control and 
Trello for a scrum board. To learn these tools we consult eachother first. If there is still
something that can't be done after that, we turn to online resources.  